# shopt -s progcomp
_vjoule() {
    local cur prev firstword lastword complete_words complete_options

    # Don't break words at : and =, see [1] and [2]
    COMP_WORDBREAKS=${COMP_WORDBREAKS//[:=]}

    cur=${COMP_WORDS[COMP_CWORD]}
    prev=${COMP_WORDS[COMP_CWORD-1]}
    firstword=$(_sy_get_firstword)
    lastword=$(_sy_get_lastword)

    GLOBAL_COMMANDS="\
		exec\
		profile\
		top"

    GLOBAL_OPTIONS="\
		-h --help -v --version"

    EXEC_OPTIONS="\
		-h --help -v --version -nv --no-nvidia -nr --no-rapl --no-cpu --no-ram --no-gpu -o --output"

    PROFILE_OPTIONS="\
		-h --help -v --version"

    TOP_OPTIONS="\
		-h --help -v --version"
    
    # Un-comment this for debug purposes:
    # echo -e "\nprev = $prev, cur = $cur, firstword = $firstword, lastword = $lastword\n"
    case "${firstword}" in
	exec)
	    complete_options="$EXEC_OPTIONS"
	    complete_words="*"
	    ;;
	profile)
	    complete_options="$PROFILE_OPTIONS"
	    ;;
	top)
	    complete_options="$TOP_OPTIONS"
	    ;;
	*)
	    case "${prev}" in
		*)
		    complete_words="$GLOBAL_COMMANDS"
		    complete_options="$GLOBAL_OPTIONS"
		    ;;
	    esac
	    ;;
    esac

    # Either display words or options, depending on the user input
    if [[ $cur == -* ]]; then
	COMPREPLY=($( compgen -f -d -W "$complete_options" -- $cur ))

    elif [[ $prev == "vjoule" ]]; then
    	COMPREPLY=($( compgen -W "$complete_words" -- $cur ))
    else
	_filedir
    fi

    return 0
}

# Determines the current plugin optons for RAID0 plugin, 
# including sub-options of other plugins
_sy_plugin_option_words_raid0() {
    local storage1_type storage2_type i

    storage1_type=
    storage2_type=
    for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
	if [[ $cur != ${COMP_WORDS[i]} && ${COMP_WORDS[i]} == storage1:type=* ]]; then
	    storage1_type=${COMP_WORDS[i]/storage1:type=}
	fi

	if [[ $cur != ${COMP_WORDS[i]} && ${COMP_WORDS[i]} == storage2:type=* ]]; then
	    storage2_type=${COMP_WORDS[i]/storage2:type=}
	fi
    done

    if [[ $storage1_type != "" && $storage1_type != "raid0" ]]; then
	echo $(_sy_plugin_option_words_for_plugin "$storage1_type" "storage1.")		
    else
	for plugin_id in $PLUGIN_IDS_TRANSFER; do
	    echo "storage1:type=$plugin_id"
	done
    fi

    if [[ $storage2_type != "" && $storage2_type != "raid0" ]]; then
	echo $(_sy_plugin_option_words_for_plugin "$storage2_type" "storage2.")
    else
	for plugin_id in $PLUGIN_IDS_TRANSFER; do
	    echo "storage2:type=$plugin_id"
	done
    fi
}

# Determines the first non-option word of the command line. This
# is usually the command
_sy_get_firstword() {
    local firstword i

    firstword=
    for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
	if [[ ${COMP_WORDS[i]} != -* ]]; then
	    firstword=${COMP_WORDS[i]}
	    break
	fi
    done

    echo $firstword
}

# Determines the last non-option word of the command line. This
# is usally a sub-command
_sy_get_lastword() {
    local lastword i

    lastword=
    for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
	if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[ ${COMP_WORDS[i]} != $cur ]]; then
	    lastword=${COMP_WORDS[i]}
	fi
    done

    echo $lastword
}
# Define bash completions ###

complete -F _vjoule vjoule